#pragma once

#include "command.hpp"
#include "../../utils/logger.hpp"

class PermissionsCmd : public Command, public Singleton<PermissionsCmd>
{
public:
    std::string getUserStatusText(const TgBot::ChatMember::Ptr &member)
    {
        if (!member)
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.";

        std::ostringstream ss;
        ss << "–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ: ";

        if (member->status == "creator")
            ss << "üëë –°–æ–∑–¥–∞—Ç–µ–ª—å\n";
        else if (member->status == "administrator")
            ss << "üîß –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n";
        else if (member->status == "member")
            ss << "üë§ –û–±—ã—á–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫\n";
        else if (member->status == "restricted")
            ss << "‚ö† –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π\n";
        else if (member->status == "left")
            ss << "üö™ –ü–æ–∫–∏–Ω—É–ª —á–∞—Ç\n";
        else if (member->status == "kicked")
            ss << "‚ùå –ó–∞–±–∞–Ω–µ–Ω\n";
        else
            ss << "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å\n";

        return ss.str();
    }

    void execute(TgBot::Message::Ptr message) override
    {
        if (message->chat->type == TgBot::Chat::Type::Group || message->chat->type == TgBot::Chat::Type::Supergroup)
        {
            try
            {
                TgBot::ChatMember::Ptr chatMember = Core::Get()->bot->getApi().getChatMember(message->chat->id, message->from->id);
                if (!chatMember)
                {
                    Core::Get()->bot->getApi().sendMessage(message->chat->id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
                    rn;
                }

                std::string statusText = getUserStatusText(chatMember);
                Core::Get()->bot->getApi().sendMessage(message->chat->id, statusText);
            }
            catch (TgBot::TgException &e)
            {
                Logger::Get()->Log("/permissions: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤: %s", std::string(e.what()).c_str());
                Core::Get()->bot->getApi().sendMessage(message->chat->id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
            }
        }
    }
};
